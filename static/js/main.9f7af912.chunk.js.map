{"version":3,"sources":["p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/superEditableSpan.module.css","p2-homeworks/h6/HW6.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","wrapper","src","avatar","alt","photo","content","name","message","time","AlternativeMessage","title","rank","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","priorityBtn","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","SuperButton","red","finalClassName","default","std","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","blue","Greeting","setNameCallback","addUser","totalUsers","inputClass","normal","errorMessage","total","GreetingContainer","users","addUserCallback","setName","setError","length","trim","console","log","HW3","setUsers","newUser","v1","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","styles","superSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","paddingLeft","path","exact","render","to","Header","items","activeClassName","active","arrowRight3","viewBox","d","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9f7af912.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"AlternativeMessage_content__37bWC\",\"title\":\"AlternativeMessage_title__25s1c\",\"rank\":\"AlternativeMessage_rank__LePTJ\",\"name\":\"AlternativeMessage_name__1KkVb\",\"message\":\"AlternativeMessage_message__1r_Ux\",\"time\":\"AlternativeMessage_time__3KEBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__gmL-o\",\"content\":\"Message_content__Uqvym\",\"name\":\"Message_name__2aqHJ\",\"message\":\"Message_message__3Aabx\",\"time\":\"Message_time__3fAvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Header_items__1qV3N\",\"active\":\"Header_active__1B2cD\",\"arrowRight3\":\"Header_arrowRight3__2Mf4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__9m4pP\",\"error\":\"Greeting_error__2SED4\",\"errorMessage\":\"Greeting_errorMessage__367Yc\",\"normal\":\"Greeting_normal__2Lg3O\",\"total\":\"Greeting_total__3dj1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3SsRE\",\"errorInput\":\"SuperInputText_errorInput__BFyzj\",\"error\":\"SuperInputText_error__3lAx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2FcQy\",\"red\":\"SuperButton_red__BTWH7\",\"std\":\"SuperButton_std__3Z_u6\",\"glowing\":\"SuperButton_glowing__OdA4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3E5yi\",\"title\":\"App_title__zQls9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__3iXkI\",\"priorityBtn\":\"Affairs_priorityBtn__1kAZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3gH12\",\"column\":\"HW4_column__1vyBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1ncKf\",\"spanClassName\":\"SuperCheckbox_spanClassName__1_Ok5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"superEditableSpan_superSpan__30e2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HW6_wrapper__3Hc8K\"};","import React from \"react\";\r\nimport {MessageType} from \"./HW1\";\r\nimport style from \"./Message.module.css\"\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div>\r\n                <img src={props.avatar} alt=\"\" className={style.photo}/>\r\n            </div>\r\n            <div className={style.content}>\r\n                <div className={style.name}>{props.name}</div>\r\n                <div className={style.message}>{props.message}</div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport style from \"./AlternativeMessage.module.css\";\r\nimport {MessageType} from \"./HW1\";\r\n\r\nfunction AlternativeMessage(props: MessageType) {\r\n    return (\r\n            <div className={style.content}>\r\n                <div className={style.title}>\r\n                    <img src={props.avatar} alt=\"\" className={style.photo}/>\r\n                    <div className={style.name}>{props.name}</div>\r\n                    <span className={style.rank}>{props.rank}</span>\r\n                </div>\r\n                <div className={style.message}>{props.message}</div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default AlternativeMessage;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n    rank: \"begginer\"\r\n};\r\nexport type MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n    rank?: string\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n                rank={messageData.rank}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n       return props.deleteAffairCallback(props.affair._id)\r\n    };// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name}\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport style from \"./Affairs.module.css\"\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        return props.setFilter(\"all\")\r\n    }; // need to fix\r\n    const setHigh = () => {\r\n        return props.setFilter(\"high\")\r\n    };\r\n    const setMiddle = () => {\r\n        return props.setFilter(\"middle\")\r\n    };\r\n    const setLow = () => {\r\n        return props.setFilter(\"low\")\r\n    };\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n\r\n            {mappedAffairs}\r\n            <div className={style.priorityBtn}>\r\n                <button onClick={setAll}>All</button>\r\n                <button onClick={setHigh}>High</button>\r\n                <button onClick={setMiddle}>Middle</button>\r\n                <button onClick={setLow}>Low</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}; // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType>  => { // need to fix any\r\n\r\n    if (filter === \"high\") {\r\n        return affairs.filter(a => a.priority === \"high\");\r\n    } else if (filter === \"middle\") {\r\n        return affairs.filter(a => a.priority === \"middle\");\r\n    } else if (filter === \"low\") {\r\n        return affairs.filter(a => a.priority === \"low\");\r\n    }\r\n    return affairs;// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id); // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n            onChangeText && onChangeText(e.currentTarget.value);\r\n\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.std}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text  ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.normal ; // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            {error && <span className={s.errorMessage}>{error}</span>}\r\n            <button onClick={addUser}>add</button>\r\n            <div className={s.total}>{totalUsers}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n        setError('')\r\n    };\r\n    const addUser = () => {\r\n        if (name.trim()) {\r\n            alert(`Hello ${name.trim()}!`)\r\n            addUserCallback(name.trim())// need to fix\r\n            setName('')\r\n            console.log(users)\r\n        } else {\r\n            setError('Name is required!')\r\n        }\r\n\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser = {_id: v1(), name: name}\r\n        setUsers([...users, newUser]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport styles from './superEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${styles.superSpan}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\nimport s from './HW6.module.css'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        setValue(restoreState(\"editable-span-value\", 'enter text...'));\n    };\n\n    return (\n        <div className={s.wrapper}>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? value : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            JuniorPage\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            JuniorPlus Page\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from \"react\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"/junior-plus\",\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div style={{paddingLeft: '55px'}}>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Header.module.css'\r\nimport {PATH} from './Routes';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={styles.items}>\r\n\r\n            <NavLink activeClassName={styles.active} to={PATH.PRE_JUNIOR}>PreJunior</NavLink>\r\n            <NavLink activeClassName={styles.active} to={PATH.JUNIOR}>Junior</NavLink>\r\n            <NavLink activeClassName={styles.active} to={PATH.JUNIOR_PLUS}>JuniorPlus</NavLink>\r\n\r\n            <svg className={styles.arrowRight3} viewBox=\"0 0 5 9\">\r\n                <path d=\"M0.419,9.000 L0.003,8.606 L4.164,4.500 L0.003,0.394 L0.419,0.000 L4.997,4.500 L0.419,9.000 Z\"/>\r\n            </svg>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n                <Routes />\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div className={s.title}>react homeworks:</div>\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}